[1mdiff --git a/collection/migrations/0001_initial.py b/collection/migrations/0001_initial.py[m
[1mindex 81adec6..945e3e8 100644[m
[1m--- a/collection/migrations/0001_initial.py[m
[1m+++ b/collection/migrations/0001_initial.py[m
[36m@@ -1,4 +1,8 @@[m
[31m-# Generated by Django 4.1.2 on 2022-12-10 17:05[m
[32m+[m[32m<<<<<<< Updated upstream[m
[32m+[m[32m# Generated by Django 4.1.2 on 2022-11-02 14:35[m
[32m+[m[32m=======[m
[32m+[m[32m# Generated by Django 4.1.2 on 2022-12-10 15:04[m
[32m+[m[32m>>>>>>> Stashed changes[m
 [m
 from django.db import migrations, models[m
 import django.db.models.deletion[m
[1mdiff --git a/collection/models.py b/collection/models.py[m
[1mindex 2fe4e54..b9333bc 100644[m
[1m--- a/collection/models.py[m
[1m+++ b/collection/models.py[m
[36m@@ -3,6 +3,7 @@[m [mfrom profile_page.models import Profile[m
 [m
 class Post(models.Model):[m
     post_type = models.CharField(max_length=10)[m
[32m+[m[32m    # author = models.OneToOneField(Profile, on_delete=models.CASCADE, null=True)[m
     author = models.ForeignKey(Profile, on_delete=models.CASCADE, null=True)[m
     author_username = models.CharField(max_length=150, null=True)[m
     date_created = models.DateField(auto_now_add=True)[m
[1mdiff --git a/collection/static/collection/js/modal.js b/collection/static/collection/js/modal.js[m
[1mindex 5109f91..1fa3619 100644[m
[1m--- a/collection/static/collection/js/modal.js[m
[1m+++ b/collection/static/collection/js/modal.js[m
[36m@@ -48,12 +48,12 @@[m [mmodalCreatePost.addEventListener('click', () => {[m
                 'content': content,[m
             },[m
             success: [[m
[31m-                function() {[m
[31m-                    createCollection("");[m
[31m-                }, [m
[31m-                function () { [m
[31m-                    console.log ("post success")[m
[31m-                }],[m
[32m+[m[32m            function() {[m
[32m+[m[32m                createCollection("");[m
[32m+[m[32m            },[m[41m [m
[32m+[m[32m            function () {[m[41m [m
[32m+[m[32m                console.log ("post success")[m
[32m+[m[32m            }],[m
         });[m
 [m
 [m
[1mdiff --git a/collection/templates/collection.html b/collection/templates/collection.html[m
[1mindex 7970da9..cc5ba58 100644[m
[1m--- a/collection/templates/collection.html[m
[1m+++ b/collection/templates/collection.html[m
[36m@@ -18,10 +18,15 @@[m
     </div>[m
 [m
     <div id="collectionSearch" class="w-full md:w-6/12 pb-12 md:pb-24">[m
[32m+[m[32m<<<<<<< Updated upstream[m
[32m+[m[32m        <form>[m[41m   [m
[32m+[m[32m            <label for="default-search" class="mb-2 text-sm font-medium text-gray-900 sr-only">Search</label>[m
[32m+[m[32m=======[m
         <!-- For passing data to views -->[m
         <span id="search_query" searchKey="{{ search_key }}"></span>[m
         <form method="GET" action="{% url 'collection:show_collection' %}">   [m
             {% csrf_token %}[m
[32m+[m[32m>>>>>>> Stashed changes[m
             <div class="relative">[m
                 <div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">[m
                     <svg aria-hidden="true" class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>[m
[1mdiff --git a/collection/urls.py b/collection/urls.py[m
[1mindex e9c4183..472f5e2 100644[m
[1m--- a/collection/urls.py[m
[1m+++ b/collection/urls.py[m
[36m@@ -12,6 +12,5 @@[m [murlpatterns = [[m
     path('education/json/', get_education_json, name='education_json'),[m
     path('forum/items/', include('forum_item.urls'), name='collection_forum_items'),[m
     path('viewuser', viewuser, name='viewuser'),[m
[31m-[m
     # TODO ADD EDUC[m
 ][m
\ No newline at end of file[m
[1mdiff --git a/collection/views.py b/collection/views.py[m
[1mindex 497fc62..3e76404 100644[m
[1m--- a/collection/views.py[m
[1m+++ b/collection/views.py[m
[36m@@ -160,3 +160,124 @@[m [mdef get_education_json(request):[m
                         use_natural_foreign_keys=True,[m
                         use_natural_primary_keys=True),[m
                         content_type="application/json")[m
[32m+[m[32mfrom http.client import HTTPResponse[m
[32m+[m[32mfrom django.shortcuts import render[m
[32m+[m[32mfrom django.http import HttpResponse, HttpResponseRedirect, HttpResponseBadRequest, JsonResponse[m
[32m+[m[32mfrom django.core import serializers[m
[32m+[m[32mfrom django.contrib.auth.decorators import login_required[m
[32m+[m[32mfrom django.views.decorators.csrf import csrf_exempt[m
[32m+[m[32mfrom django.forms.models import model_to_dict[m
[32m+[m
[32m+[m[32mfrom collection.models import Post[m
[32m+[m[32mfrom profile_page.models import Profile[m
[32m+[m
[32m+[m[32mdef show_collection(request):[m
[32m+[m[32m    posts = Post.objects.all()[m
[32m+[m[32m    user_loggedin = False[m
[32m+[m[32m    if request.user.is_authenticated:[m
[32m+[m[32m        user_loggedin = True[m
[32m+[m
[32m+[m[32m    context = {[m
[32m+[m[32m        'posts': posts,[m
[32m+[m[32m        'count': posts.count(),[m
[32m+[m[32m        'user_loggedin': user_loggedin,[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return render(request, 'collection.html', context)[m
[32m+[m
[32m+[m[32mdef search_collection(request, search_key):[m
[32m+[m[32m    if request.method == 'GET':[m
[32m+[m[32m        search_key = request.GET.get('search_key')[m
[32m+[m[32m        posts = Post.objects.filter(title__icontains=search_key)[m
[32m+[m[32m        template = ''[m
[32m+[m
[32m+[m[32m        if ("forum" in request.path):[m
[32m+[m[32m            template = 'forum.html'[m[41m    [m
[32m+[m[32m        elif ("education" in request.path):[m
[32m+[m[32m            template = 'education.html'[m
[32m+[m[32m        else:[m
[32m+[m[32m            template = 'collection.html'[m
[32m+[m
[32m+[m[32m        context = {[m
[32m+[m[32m            'posts': posts,[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return render(request, template, context)[m
[32m+[m
[32m+[m[32m# login required[m
[32m+[m[32mdef forum_archive(request):[m
[32m+[m[32m    forum_posts = Post.objects.filter(post_type='forum')[m
[32m+[m[32m    user_loggedin = False[m
[32m+[m[32m    if request.user.is_authenticated:[m
[32m+[m[32m        user_loggedin = True[m
[32m+[m
[32m+[m[32m    context = {[m
[32m+[m[32m        'education_posts': forum_posts,[m
[32m+[m[32m        'count': forum_posts.count(),[m
[32m+[m[32m         'user_loggedin': user_loggedin,[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return render(request, 'forum.html', context)[m
[32m+[m
[32m+[m[32m# login required[m
[32m+[m[32mdef education_archive(request):[m
[32m+[m[32m    education_posts = Post.objects.filter(post_type='education')[m
[32m+[m[32m    user_loggedin = False[m
[32m+[m[32m    if request.user.is_authenticated:[m
[32m+[m[32m        user_loggedin = True[m
[32m+[m
[32m+[m[32m    context = {[m
[32m+[m[32m        'forum_posts': education_posts,[m
[32m+[m[32m        'count': education_posts.count(),[m
[32m+[m[32m         'user_loggedin': user_loggedin,[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return render(request, 'education.html', context)[m
[32m+[m
[32m+[m[32mdef viewuser(request):[m
[32m+[m[32m    post = Post.objects.get(pk=1)[m
[32m+[m[32m    user = Profile.objects.get(user=request.user)[m
[32m+[m[41m    [m
[32m+[m[32m    postjson = model_to_dict(post)[m
[32m+[m[32m    userjson = model_to_dict(user)[m
[32m+[m
[32m+[m[32m    postjson["author"] = userjson[m
[32m+[m
[32m+[m[32m    # Post JSON now has author with value json[m
[32m+[m[32m    return Js